#!/bin/sh

mkdir -p <%= @basic[:loghome]+"/"+@package[:package] %>

echo "Take few minutes for install the package"

## runit preparation
cd /
mkdir -p /etc/runit/1.d
rm -f /etc/apt/apt.conf.d/40proxy
npm install uglify-js -g
npm install svgo -g

cd /var/www/<%= @package[:package] %>/base
mkdir -p /etc/runit/3.d
mv runit-1 /etc/runit/1
mv runit-1.d-cleanup-pids /etc/runit/1.d/cleanup-pids
mv runit-1.d-00-fix-var-logs /etc/runit/1.d/00-fix-var-logs
mv runit-2 /etc/runit/2
mv runit-3 /etc/runit/3
mv boot /sbin/boot
mkdir -p /etc/service/cron
mkdir -p /etc/service/rsyslog
mv cron /etc/service/cron/run
mv rsyslog /etc/service/rsyslog/run
mv nginx.conf /etc/nginx/nginx.conf

### Install jmealloc

mkdir -p /jemalloc
cd /jemalloc
wget http://www.canonware.com/download/jemalloc/jemalloc-3.6.0.tar.bz2
tar -xjf jemalloc-3.6.0.tar.bz2
cd jemalloc-3.6.0
./configure
make
mv lib/libjemalloc.so.1 /usr/lib
cd / && rm -rf /jemalloc

###Install nginx
cd /var/www/<%= @package[:package] %>/base
chmod 755 install-nginx
./install-nginx
mv install-nginx /tmp/install-nginx

###letsencrypt
mv letsencrypt  /var/www/<%= @package[:package] %>/bin
chmod 755 /var/www/<%= @package[:package] %>/bin/letsencrypt
##copy config file
cp /var/www/<%= @package[:package] %>/config/nilavu.conf <%= @basic[:libhome] %>/nilavu.conf
cp /var/www/<%= @package[:package] %>/config/site_settings.yml <%= @basic[:libhome] %>/site_settings.yml
cp /var/www/<%= @package[:package] %>/config/regions.yml <%= @basic[:libhome] %>/regions.yml
cp /var/www/<%= @package[:package] %>/config/nginx.conf /etc/nginx/sites-available/
sed -i 's/user www-data/#user www-data/g' /etc/nginx/nginx.conf
mv /etc/nginx/sites-available/nginx.conf /etc/nginx/sites-available/default
mkdir -p /var/nginx/cache

cat > /etc/runit/3.d/01-nginx <<EOF
#!/bin/bash
sv stop nginx
EOF

chmod 755 /etc/runit/3.d/01-nginx

cat > /etc/runit/3.d/02-unicorn <<EOF
#!/bin/bash
sv stop unicorn
EOF

chmod 755 /etc/runit/3.d/02-unicorn

mkdir -p /etc/service/unicorn
mkdir -p /etc/service/nginx
cp /etc/rc.d/init.d/<%= @package[:systemd_service] %> /etc/service/unicorn/
mv /etc/service/unicorn/<%= @package[:systemd_service] %> /etc/service/unicorn/run
chmod 755 /etc/service/unicorn/run
mkdir -p /var/service
ln -s /etc/service/unicorn /var/service

cat > /etc/service/nginx/run <<EOF
#!/bin/sh
        exec 2>&1
        exec /usr/sbin/nginx
EOF
chmod 755 /etc/service/nginx/run

ln -s /etc/service/nginx /var/service

gem install bundler

gem install rake

cd /var/www/<%= @package[:package] %>/

mkdir -p tmp/pids

bundle install --deployment --without test --without development

export MEGAM_HOME=<%= @basic[:libhome] %>

RAILS_ENV=production bundle exec rake assets:precompile

mv /var/www/<%= @package[:package] %>/public/assets/social/github-d4fa1d2891690d6c2802dd0b87191b0802ec66682f1b79af9015454273191b6f.png /var/www/<%= @package[:package] %>/public/assets/social/github.png
mv /var/www/<%= @package[:package] %>/public/assets/social/google_oauth2-980984f58fd9f55d85813f2d5aa0a0ad9c14025a28dc81798c0cfa089956606f.png /var/www/<%= @package[:package] %>/public/assets/social/google_oauth2.png
mv /var/www/<%= @package[:package] %>/public/assets/social/facebook-87cce93a6298f19d284ad0d9c888ff7006294b9510668411de32ae68ee67bbf6.png /var/www/<%= @package[:package] %>/public/assets/social/facebook.png
cp /var/www/<%= @package[:package] %>/public/assets/_vendor-f933d878039082303cbbfa73aeea9199ceac1a0ab7b54eee58947db4dca7b035.js /var/www/<%= @package[:package] %>/public/assets/vendor-f933d878039082303cbbfa73aeea9199ceac1a0ab7b54eee58947db4dca7b035.js

echo "sv start unicorn and sv start nginx"
